name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  # ----------------------
  # 1. Continuous Integration (Tests)
  # ----------------------
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run tests
        env:
          DATABASE_URL: postgresql+psycopg2://testuser:testpass@localhost:5432/testdb
          PYTHONPATH: ${{ github.workspace }}    # ðŸ‘ˆ fix imports
        run: pytest -v


  # ----------------------
  # 2. Continuous Deployment (Docker)
  # ----------------------
  deploy:
    runs-on: ubuntu-latest
    needs: test   # only runs if tests pass

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & push Docker image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE